NAME
    sdoc - Simple documentation for lightweight development

SYNOPSYS
    sdoc [options] [file1 [file2 [... fileN]]]

DESCRIPTION
    SDoc is a program and a file format. As a program, SDoc generates both
    source code and documentation from a source file. It will optionally
    generate hyperlinked output if it can find a CTags output file in the
    current directory. (Alternatively, you can tell it where one is; see the
    --tags option, below.)

    SDoc tries to be useful without any options. By default, it looks for
    all ".sd" files in the current directory and unpacks the source code and
    documentation alongside them. For example, if you have a file called
    "test.java.sd", then running "simpledoc" would produce "test.java" and
    "test.java.html".

OPTIONS
    --tags=file
      Refers SDoc to a CTags file. SDoc then reads this file and creates
      hyperlinks in the generated HTML document. If there is a "tags" file
      in the current directory, SDoc will use that.

    --comment=/*,*/
      Sets the comment delimiters. Normally these are detected from the
      file's extension, but they can be set explicitly. All generated
      comments are line comments; that is, multiline block comments are
      never used. To define line comments, leave the second field blank (the
      comma can also be omitted); for example, "--comment=//" will define
      C++-style comments, and "--comment=#" defines Perl-style comments.

    -s, --source-only
      Generate the source, but do not generate HTML.

    -h, --html-only
      Generate the HTML, but do not generate the source.

FILE FORMAT
    The SDoc file format is, well, very simple. SDoc first splits the file
    into paragraphs, where paragraphs are separated by one or more blank
    lines. It then uses a simple heuristic to categorize them: documentation
    paragraphs begin with a capital letter or pipe symbol (|), and code
    paragraphs begin with anything else. Documentation paragraphs are
    commented out, and source paragraphs are left alone. (In the HTML
    output, code paragraphs are escaped and put into "<pre>" tags while
    documentation paragraphs are rendered verbatim.)

    So, for example, this is a valid SDoc file:

        Header material -- this is all comments.
        This program does something really spiffy. Check out the main() method:

        int main () {
          // This paragraph starts with a lowercase letter, so it is code.
          return 0;
        }

    If this program is in a file called "main.c.sd", then SDoc will generate
    the following in a file called "main.c":

        /* Header material -- this is all comments. */
        /* This program does something really spiffy. Check out the main() method: */

        int main () {
          // This paragraph starts with a lowercase letter, so it is code.
          return 0;
        }
        /* Generated by SDoc */

    The "Generated by SDoc" line tells SDoc that it's OK to clobber the
    file's contents. SDoc will refuse to clobber a file without this notice
    at the end.

    It is worth mentioning that SDoc can process regular source files too.

AUTHOR
    Spencer Tipping <spencer@spencertipping.com>

