#!/usr/bin/perl
# SimpleDoc documentation generator | Spencer Tipping
# Licensed under the terms of the MIT source code license



__END__

=head1 NAME

simpledoc - Simple documentation for lightweight development

=head1 SYNOPSYS

simpledoc [options] [file1 [file2 [... fileN]]]

=head1 DESCRIPTION

SimpleDoc is a program and a file format. As a program, SimpleDoc generates both source code and documentation from a SimpleDoc'd source file. It will optionally generate hyperlinked output if
it can find a CTags output file in the current directory. (Alternatively, you can tell it where one is; see the --tags option, below.)

SimpleDoc tries to be useful without any options. By default, it looks for all C<.sd> files in the current directory and unpacks the source code and documentation alongside them. For example,
if you have a file called C<test.java.sd>, then running C<simpledoc> would produce C<test.java> and C<test.java.html>.

=head1 OPTIONS

=over 2

=item B<--tags=file>

Refers SimpleDoc to a CTags file. SimpleDoc then reads this file and creates hyperlinks in the generated HTML document. If there is a C<tags> file in the current directory, SimpleDoc will use
that.

=item B<--comment=/*,*/>

Sets the comment delimiters. Normally these are detected from the file's extension, but they can be set explicitly. All generated comments are line comments; that is, multiline block
comments are never used.

=item B<--source=directory>

Tells SimpleDoc to put the source into the specified directory. The directory structure will mirror the structure of the input files.

=item B<--html=directory>

Tells SimpleDoc to put the HTML into the specified directory. The directory structure will mirror the structure of the input files.

=item B<--watch>

If specified, SimpleDoc will continue running, checking every second for new source files. When it finds one it will update both the generated source code and the HTML documentation for that
file. If there is a C<tags> file, this too will be watched; updates to C<tags> will trigger a regeneration of all HTML files.

=back

=head1 FILE FORMAT

The SimpleDoc file format is, well, very simple. The document is split into paragraphs, each one categorized as either code or as documentation. The categorization is done by a simple
heuristic: documentation paragraphs begin with a capital letter or pipe symbol (|), and code paragraphs begin with anything else. So, for example, this is a valid SimpleDoc file:

    Header material -- this is all comments.
    This program does something really spiffy. Check out the main() method:

    int main () {
      // This paragraph starts with a lowercase letter, so it is code.
      return 0;
    }

If this program is in a file called C<main.c.sd>, then SimpleDoc will generate the following in a file called C<main.c>:

    /* Header material -- this is all comments. */
    /* This program does something really spiffy. Check out the main() method: */

    int main () {
      // This paragraph starts with a lowercase letter, so it is code.
      return 0;
    }
    /* Generated by SimpleDoc */

The C<Generated by SimpleDoc> line tells SimpleDoc that it's OK to clobber the file's contents. SimpleDoc will refuse to clobber a file without this notice at the end.

=head1 AUTHOR

Spencer Tipping <spencer@spencertipping.com>

=cut
