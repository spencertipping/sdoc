" Language:    SDoc
" Maintainer:  Spencer Tipping <spencer@spencertipping.com>
" URL:         http://spencertipping.com/sdoc/vim/plugin/sdoc.vim
" Project URL: http://github.com/spencertipping/sdoc

" The idea is that we look at the original filename, trim the '.sdoc' from the end, and then rerun the filetype detection to pick up the syntax. At the end, we create a custom syntax region to
" handle documentation paragraphs. Paragraphs begin at any line and end with a blank line, as matched by ^$.

fun SDocSetup()
  " Trigger autocommands to redetect the filetype without the .sdoc extension.
  execute ":doautocmd BufReadPost " . expand("%:r")

  " Add in custom syntax elements
  syn case match
  syn sync minlines=5

  syn region sdBlockComment start=/\(^$\n^\|\%^\)\s*[A-Z\|]/ end=/^\s*$\|\%$/ contains=sdCoerceSDoc,sdNumberedList,sdHeading containedin=ALL keepend
  syn match  sdHeading      /\(^$\n^\|\%^\)\s*[A-Z].\{,60\}\.$/ contained
  syn match  sdCoerceCode   /^\s*c$/
  syn match  sdCoerceSDoc   /^\s*|\(\s\|$\)/ contained
  syn region sdNumberedList start=/^\s*|\s*\d\{1,2\}\.\s\{1,2\}[A-Za-z]/me=e-1 end=/^$\|\%$/ contains=sdNumberedItem transparent
  syn match  sdNumberedItem /^\s*|\?\s*\d\{1,2\}\.\s\{1,2\}/ contained

  syn match  sdPreprocessor /^\s*-\s\+\w\+/

  syn match  sdTodoFn /^\s*-\s\+fn\s.*$/
  syn match  sdTodoFt /^\s*-\s\+ft\s/
  syn match  sdTodoIp /^\s*-\s\+ip\s/
  syn match  sdTodoNb /^\s*-\s\+nb\s/
  syn match  sdTodoTh /^\s*-\s\+th\s/
  syn match  sdTodoTd /^\s*-\s\+td\s/
  syn match  sdTodoPo /^\s*-\s\+po\s/

  hi link sdBlockComment Comment
  hi link sdHeading      PreProc
  hi link sdCoerceCode   PreProc
  hi link sdCoerceSDoc   PreProc
  hi link sdNumberedItem PreProc
  hi link sdPreprocessor Special

  hi link sdTodoFn Type
  hi link sdTodoFt Identifier
  hi link sdTodoIp Keyword
  hi link sdTodoNb Comment
  hi link sdTodoTh Special
  hi link sdTodoTd Special
  hi link sdTodoPo Special
endfun

augroup sdoc
  autocmd!
  autocmd BufReadPost,BufNew *.sdoc execute SDocSetup()
augroup END

" Generated by SDoc 
